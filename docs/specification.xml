<?xml-stylesheet href="specstyle.css"?>
<specification>
    <group name="Clip Editor">
        <requirement>
            <design>Devs must be able to add the clip editor in html as a web component.</design>
        </requirement>

        <requirement>
            <design>Devs must be able to programmatically link a clip to an editor.</design>
        </requirement>

        <requirement>
            <design>Users must be able to draw new notes onto the clip.</design>
        </requirement>

        <requirement>
            <design>Users must be able to select a bend drawing mode, where they can draw bend data onto a clip.</design>
        </requirement>

        <requirement>
            <design>Users must be able to filter which channels to show data for. By default it will show data for all channels.</design>
        </requirement>

        <requirement>
            <design>Users must be able to zoom in and out.</design>
        </requirement>

        <requirement>
            <design>Users must be able to add control change 'channels' to the clip editor. They can then select one of the channels to draw CC data into.</design>
        </requirement>

        <requirement>
            <design>Users must be able to select a velocity drawing mode, where for each note they can draw in its velocity, either as a constant value, or changing over time.</design>
        </requirement>
    </group>

    <group name="MIDI Out Port Selector">
        <requirement>
            <design>Devs must be able to add the selector in html as a web component.</design>
            <implementation>The web component is registered as shimi-ui-midi-out-picker.</implementation>
        </requirement>

        <requirement>
            <design>Devs must be able to programmatically link a MidiOut object to the selector.</design>
            <implementation>The component exposes a .midiOut property which is used for attaching a MidiOut object to it.</implementation>
        </requirement>

        <requirement>
            <design>Devs must be able to specify a default port name which it tries to connect to.</design>
        </requirement>

        <requirement>
            <design>Users must be able to select a port from a dropdown list of names.</design>
            <implementation>Once the .midiAccess property has been set, the component will list all out ports that it can find on the MidiAccess object.</implementation>
        </requirement>
    </group>

    <group name="MIDI In Port Selector">
        <requirement>
            <design>Devs must be able to add the selector in html as a web component.</design>
        </requirement>

        <requirement>
            <design>Devs must be able to programmatically link a MidiIn object to the selector.</design>
        </requirement>

        <requirement>
            <design>Devs must be able to specify a default port name which it tries to connect to.</design>
        </requirement>

        <requirement>
            <design>Users must be able to select a port from a dropdown list of names.</design>
        </requirement>
    </group>
</specification>